import numpy as np
from scipy.interpolate import interp1d

def initialize_interp():
        Mamajek_str = '-4.2 -0.369 19.7 -4.1 -0.361 18.5 -4.0 -0.355 17.5 -3.6 -0.338 15 -3.1 -0.325 11 -2.8 -0.281 10 -1.7 -0.230 7.3 -1.4 -0.210 6.1 '\
        '-1.1 -0.192 5.4 -1.0 -0.176 5.0 -0.9 -0.165 4.6 -0.5 -0.145 4.0 -0.4 -0.133 3.9 -0.2 -0.108 3.4 0.7 -0.061 2.8 0.8 -0.035 2.5 1.11 0.004 2.3 1.34 '\
        '0.044 2.15 1.48 0.091 2.05 1.55 0.108 2.00 1.76 0.164 1.90 1.84 0.186 1.85 1.89 0.197 1.83 2.07 0.242 1.76 2.29 0.288 1.67 2.30 0.294 1.67 2.51 '\
        '0.339 1.59 2.79 0.385 1.50 2.99 0.432 1.44 3.08 0.449 1.43 3.23 0.476 1.39 3.40 0.506 1.33 3.70 0.553 1.25 3.87 0.579 1.21 4.01 0.599 1.18 4.15 0.620 '\
        '1.14 4.29 0.640 1.11 4.45 0.664 1.08 4.50 0.672 1.07 4.79 0.713 1.02 4.86 0.722 1.00 4.94 0.733 0.99 4.98 0.738 0.98 5.13 0.758 0.97 5.18 0.766 0.96 '\
        '5.32 0.786 0.94 5.55 0.820 0.90 5.76 0.853 0.87 5.80 0.862 0.86 5.89 0.879 0.85 5.97 0.895 0.82 6.19 0.920 0.78 6.34 0.974 0.76 6.57 1.013 0.75 6.79 '\
        '1.108 0.73 6.98 1.190 0.72 7.04 1.216 0.71 7.36 1.272 0.68 7.60 1.357 0.66 7.80 1.420 0.65 8.01 1.505 0.64 8.15 1.529 0.63 8.47 1.632 0.59 8.69 1.699 '\
        '0.56 8.91 1.766 0.55 9.20 1.886 0.54 9.69 2.019 0.49 9.97 2.089 0.47 10.30 2.173 0.44 10.70 2.306 0.40 11.14 2.420 0.36 12.19 2.680 0.26 12.80 2.831 '\
        '0.22 13.57 3.073 0.18 14.30 3.277 0.16 15.51 3.664 0.12 16.62 4.13 0.10 17.07 4.31 0.097 17.81 4.45 0.090 18.42 4.56 0.089 18.84 4.64 0.082 19.14 4.71 '\
        '0.081 19.36 4.75 0.079 19.75 4.79 0.078 20.0 4.82 0.077 20.5 4.91 0.076 20.9 5.05 0.075'
        Mamajek_tab = Mamajek_str.split(' ')
        MV = np.asarray(list(map(float,Mamajek_tab[::3])))
        VI = np.asarray(list(map(float,Mamajek_tab[1:][::3] )))
        M = np.asarray(list(map(float,Mamajek_tab[2:][::3] )))
        MI = MV - VI
        fun = interp1d(M, MI, kind='linear')
        return fun 

def get_MS_mag(fun,mass, dist, AI=0):
        if (mass>19.7): 
                magI = -4.2 + 5*np.log10(dist*1000.) - 5 + AI
        elif (mass<0.075):
                magI = 20.9 + 5*np.log10(dist*1000.) - 5 + AI
        else:
                MI_MS = fun(mass)    
                magI = MI_MS + 5*np.log10(dist*1000.) - 5 + AI
        return magI
